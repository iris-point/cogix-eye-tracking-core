name: Publish to npm and GitHub Packages

on:
  push:
    tags: [ 'v*.*.*' ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version type to bump (patch, minor, major)'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write       # for pushing tags and creating releases
      packages: write       # for publishing to GitHub Packages
      id-token: write       # for npm provenance (when repo is public)

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup for npm registry
      - name: Setup Node for npm
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          scope: '@iris-point'
          cache: 'npm'
          always-auth: true

      - run: npm ci
      - run: npm run build

      # For tag-triggered releases
      - name: Publish to npm (Tag Release)
        if: startsWith(github.ref, 'refs/tags/v')
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # For manual workflow dispatch
      - name: Configure Git (Manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Bump Version (Manual)
        if: github.event_name == 'workflow_dispatch'
        id: version
        run: |
          npm version ${{ github.event.inputs.version }} -m "chore(release): %s"
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Publish to npm (Manual)
        if: github.event_name == 'workflow_dispatch'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Setup for GitHub Packages
      - name: Setup Node for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@iris-point'
          always-auth: true

      # Publish to GitHub Packages
      - name: Publish to GitHub Packages
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Push changes for manual dispatch
      - name: Push changes (Manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git push origin HEAD:main
          git push origin --tags

      # Create GitHub Release
      - name: Get version for release
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "version=${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && format('v{0}', steps.get_version.outputs.version) || github.ref }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body: |
            ## 🚀 Release v${{ steps.get_version.outputs.version }}
            
            ### 📦 Install from NPM Registry
            ```bash
            npm install @iris-point/eye-tracking-core@${{ steps.get_version.outputs.version }}
            ```
            
            ### 📦 Install from GitHub Packages
            ```bash
            # First, authenticate with GitHub Packages
            npm login --scope=@iris-point --auth-type=legacy --registry=https://npm.pkg.github.com
            
            # Then install
            npm install @iris-point/eye-tracking-core@${{ steps.get_version.outputs.version }} --registry=https://npm.pkg.github.com
            ```
            
            ### 🌐 CDN Links
            ```html
            <!-- unpkg -->
            <script src="https://unpkg.com/@iris-point/eye-tracking-core@${{ steps.get_version.outputs.version }}/dist/cogix-eye-tracking-core.min.js"></script>
            
            <!-- jsDelivr -->
            <script src="https://cdn.jsdelivr.net/npm/@iris-point/eye-tracking-core@${{ steps.get_version.outputs.version }}/dist/cogix-eye-tracking-core.min.js"></script>
            ```
            
            ### 📋 Package Links
            - [NPM Package](https://www.npmjs.com/package/@iris-point/eye-tracking-core)
            - [GitHub Package](https://github.com/iris-point/cogix-eye-tracking-core/packages)
          draft: false
          prerelease: false