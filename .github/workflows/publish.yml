name: Publish SDK to NPM

on:
  push:
    tags: [ 'v*.*.*' ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version type to bump (patch, minor, major)'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write       # for pushing tags and creating releases
      packages: write       # for publishing to GitHub Packages
      id-token: write       # for npm provenance (when repo is public)

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ============================================
      # Build Core SDK
      # ============================================
      
      # Setup for npm registry
      - name: Setup Node for npm
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          scope: '@iris-point'
          cache: 'npm'
          always-auth: true

      - run: npm ci
      - run: npm run build

      # For tag-triggered releases
      - name: Publish to npm (Tag Release)
        if: startsWith(github.ref, 'refs/tags/v')
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # For manual workflow dispatch
      - name: Bump version and publish (Manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # Bump version
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          
          # Get new version
          VERSION=$(node -p "require('./package.json').version")
          
          # Commit and tag
          git add package.json package-lock.json
          git commit -m "chore: release v${VERSION}"
          git tag "v${VERSION}"
          
          # Publish to npm
          npm publish --access public
          
          # Push changes
          git push origin HEAD:main --follow-tags
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ============================================
      # Create GitHub Release
      # ============================================
      
      - name: Get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        if: startsWith(github.ref, 'refs/tags/v')

      - name: Generate checksums
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          npm pack
          TARBALL="iris-point-eye-tracking-core-${{ steps.get_version.outputs.version }}.tgz"
          sha256sum ${TARBALL} > checksums.txt
          echo "Generated checksums for ${TARBALL}"

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            # ðŸŽ¯ Cogix Eye Tracking Core SDK v${{ steps.get_version.outputs.version }}
            
            ## ðŸ“¦ Installation
            
            ```bash
            npm install @iris-point/eye-tracking-core@${{ steps.get_version.outputs.version }}
            ```
            
            ## âœ¨ What's New
            - See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details
            
            ## ðŸ“Š Features
            - Hardware eye tracker support (via WebSocket)
            - WebGazer webcam-based tracking
            - React components and hooks
            - Real-time analysis and visualization
            - AOI detection and monitoring
            - jsPsych plugin support
            
            ## ðŸ“š Documentation
            - [API Documentation](https://github.com/${{ github.repository }}#readme)
            - [Examples](https://github.com/${{ github.repository }}/tree/main/examples)
            
            ## ðŸ”— Links
            - [NPM Package](https://www.npmjs.com/package/@iris-point/eye-tracking-core)
            - [GitHub Repository](https://github.com/${{ github.repository }})

      # Upload SDK Package to Release
      - name: Upload SDK Package
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./iris-point-eye-tracking-core-${{ steps.get_version.outputs.version }}.tgz
          asset_name: iris-point-eye-tracking-core-${{ steps.get_version.outputs.version }}.tgz
          asset_content_type: application/gzip

      - name: Upload Checksums
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./checksums.txt
          asset_name: checksums.txt
          asset_content_type: text/plain